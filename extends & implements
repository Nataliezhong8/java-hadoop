Extends:可以理解为全盘继承了父类的功能。  
        1)extends是继承父类，继承之后可以使用父类的方法, 也可以重写父类的方法.
        2)只要那个类不是声明为final或者那个类定义为abstract的就能继承
        3)extends， 可以实现父类，也可以调用父类初始化 this.parent()。而且会覆盖父类定义的变量或者函数。
        这样的好处是：架构师定义好接口，让工程师实现就可以了。整个项目开发效率和开发成本大大降低。
implements:可以理解为为这个类附加一些额外的功能；
        1)interface定义一些方法,并没有实现,需要implements来实现才可用;
        2)必须重写才能使用
        3)implements，实现父类，子类不可以覆盖父类的方法或者变量。
        即使子类定义与父类相同的变量或者函数，也会被父类取代掉。
extend可以继承一个接口,但仍是一个接口,也需要implements之后才可用。
      对于class而言，Extends用于(单)继承一个类（class），
      而implements用于实现一个接口(interface)。
      
this & super
this: 表示本类对应的引用
super：代表父类存储空间的标识，可以理解为父类的引用，可以操作父类的成员
使用方法：
        1）访问成员变量：this.成员变量 调用本类的成员变量
                        super.成员变量 调用父类的成员变量
        2) 调用构造方法： this(...)  调用本类的构造方法     
                         super(...) 调用父类的构造方法
        3）调用成员方法： this.成员方法  调用本类的成员方法     
                         super.成员方法 调用父类的成员方法
Java规定：1）子类继承父类，子类的构造方法必须调用super（）即父类的构造方法，
         而且必须放在构造方法的第一行。
         2）如果父类"只"有无参构造方法，且不打算重写子类的构造方法，为节省代码量，
         子类构造方法可以不写，但是实际上是已经写了。系统默认调用父类无参构造方法super()，
         即默认会在子类的构造方法中的第一行加上父类的无参构造方法
